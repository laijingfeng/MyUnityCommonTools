//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: c_table_scene.proto
// Note: requires additional types generated from: common_scene.proto
namespace Table
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"SCENE")]
  public partial class SCENE : global::ProtoBuf.IExtensible
  {
    public SCENE() {}
    

    private int? _id;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"id", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int id
    {
      get { return _id?? default(int); }
      set { _id = value; }
    }
    //Here has been replaced by XXMMLLDeleter
    [global::System.ComponentModel.Browsable(false)]
    public bool idSpecified
    {
      get { return _id != null; }
      set { if (value == (_id== null)) _id = value ? id : (int?)null; }
    }
    private bool ShouldSerializeid() { return idSpecified; }
    private void Resetid() { idSpecified = false; }
    
    private string _desc;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"desc", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string desc
    {
      get { return _desc?? ""; }
      set { _desc = value; }
    }
    //Here has been replaced by XXMMLLDeleter
    [global::System.ComponentModel.Browsable(false)]
    public bool descSpecified
    {
      get { return _desc != null; }
      set { if (value == (_desc== null)) _desc = value ? desc : (string)null; }
    }
    private bool ShouldSerializedesc() { return descSpecified; }
    private void Resetdesc() { descSpecified = false; }
    
    private readonly global::System.Collections.Generic.List<uint> _num_uint32 = new global::System.Collections.Generic.List<uint>();
    [global::ProtoBuf.ProtoMember(5, Name=@"num_uint32", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public global::System.Collections.Generic.List<uint> num_uint32
    {
      get { return _num_uint32; }
    }

    private float? _num_float;
    [global::ProtoBuf.ProtoMember(6, IsRequired = false, Name=@"num_float", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float num_float
    {
      get { return _num_float?? default(float); }
      set { _num_float = value; }
    }
    //Here has been replaced by XXMMLLDeleter
    [global::System.ComponentModel.Browsable(false)]
    public bool num_floatSpecified
    {
      get { return _num_float != null; }
      set { if (value == (_num_float== null)) _num_float = value ? num_float : (float?)null; }
    }
    private bool ShouldSerializenum_float() { return num_floatSpecified; }
    private void Resetnum_float() { num_floatSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"SCENE_ARRAY")]
  public partial class SCENE_ARRAY : global::ProtoBuf.IExtensible
  {
    public SCENE_ARRAY() {}
    
    private readonly global::System.Collections.Generic.List<Table.SCENE> _rows = new global::System.Collections.Generic.List<Table.SCENE>();
    [global::ProtoBuf.ProtoMember(1, Name=@"rows", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Table.SCENE> rows
    {
      get { return _rows; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}